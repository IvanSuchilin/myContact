{
	"info": {
		"_postman_id": "5ea1ec67-9053-400f-9884-c656c32fe2d4",
		"name": "MyContacts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25887937"
	},
	"item": [
		{
			"name": "new Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест создания группы\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(1);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('HobbyWorld');\r",
							"   pm.expect(jsonData.description, '\"description\" field').to.eql(\"DnD\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"name\":\"HobbyWorld\",\r\n    \"description\":\"DnD\",\r\n    \"category\":\"HOBBY\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "new Group 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест создания группы\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id, '\"id\" field').to.eql(2);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('Summer');\r",
							"   pm.expect(jsonData.description, '\"description\" field').to.eql(\"Greece\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"name\":\"Summer\",\r\n    \"description\":\"Greece\",\r\n    \"category\":\"FAMILY\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "new Group Wrong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"        pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Пустое имя\", function () {\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.expect(data.message).to.include(\"Не указано имя группы\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"name\":\"\",\r\n    \"description\":\"Greece\",\r\n    \"category\":\"FAMILY\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "new Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест создания контакта\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.group, '\"group\" field').to.eql(1);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('John');\r",
							"   pm.expect(jsonData.email, '\"email\" field').to.eql(\"q@mail\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John\",\r\n    \"company\": \"Yandex\",\r\n    \"email\": \"q@mail\",\r\n    \"religion\": \"ANOTHER\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups/:groupId/contact",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId",
						"contact"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new Contact 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест создания контакта\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.group, '\"group\" field').to.eql(2);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('Dan');\r",
							"   pm.expect(jsonData.email, '\"email\" field').to.eql(\"qq@mail\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Dan\",\r\n    \"company\": \"Google\",\r\n    \"email\": \"qq@mail\",\r\n    \"religion\": \"CHRISTIANITY\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups/:groupId/contact",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId",
						"contact"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new Contact 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест создания контакта\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.group, '\"group\" field').to.eql(1);\r",
							"    pm.expect(jsonData.company, '\"company\" field').to.eql('Umbrella');\r",
							"   pm.expect(jsonData.religion, '\"religion\" field').to.eql(\"ISLAM\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Tommy\",\r\n    \"company\": \"Umbrella\",\r\n    \"email\": \"qqq@mail\",\r\n    \"religion\": \"ISLAM\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups/:groupId/contact",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId",
						"contact"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new Contact Wrong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"        pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Email без @\", function () {\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.expect(data.message).to.include(\"Адрес электронной почты не может быть пустым и должен содержать символ @\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John\",\r\n    \"company\": \"Yandex\",\r\n    \"email\": \"qmail\",\r\n    \"religion\": \"ANOTHER\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups/:groupId/contact",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId",
						"contact"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get group by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест получения группы\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.contacts.length, 'contacts.length').to.eql(2);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('HobbyWorld');\r",
							"   pm.expect(jsonData.description, '\"description\" field').to.eql(\"DnD\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/groups/:groupId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contact by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест получения контакта\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.group, '\"group\" field').to.eql(1);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('John');\r",
							"   pm.expect(jsonData.email, '\"email\" field').to.eql(\"q@mail\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/contacts/:contactId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contacts",
						":contactId"
					],
					"variable": [
						{
							"key": "contactId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get groups all",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/groups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contacts all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Получение всех контактов\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'количество контактов').to.eql(3);\r",
							"\r",
							"    pm.expect(jsonData[0].group, 'result[0]: \"group\" field').to.eql(1);\r",
							"    pm.expect(jsonData[0].religion, 'result[0]: \"religion\" field').to.eql('ANOTHER');\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/contacts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Upd Contact 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест обновления контакта\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.group, '\"group\" field').to.eql(1);\r",
							"    pm.expect(jsonData.company, '\"company\" field').to.eql('Amazon');\r",
							"   pm.expect(jsonData.religion, '\"religion\" field').to.eql(\"ISLAM\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"company\": \"Amazon\",\r\n    \"groupId\": \"2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/contacts/:contactId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contacts",
						":contactId"
					],
					"variable": [
						{
							"key": "contactId",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upd Contact 1 Wrong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"        pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Пустая компания\", function () {\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.expect(data.message).to.include(\"Не указана компания контакта\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"company\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/contacts/:contactId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contacts",
						":contactId"
					],
					"variable": [
						{
							"key": "contactId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upd Contact 1 Wrong mail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"        pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Почта неуникальная\", function () {\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.expect(data.message).to.include(\"Пользователь с такой почтой уже существует\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"qq@mail\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/contacts/:contactId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contacts",
						":contactId"
					],
					"variable": [
						{
							"key": "contactId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upd groupby id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Тест получения группы\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.contacts.length, 'contacts.length').to.eql(2);\r",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('HobbyWorld');\r",
							"   pm.expect(jsonData.description, '\"description\" field').to.eql(\"DnD and Catan\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"name\":\"HobbyWorld\",\r\n    \"description\":\"DnD and Catan\",\r\n    \"category\":\"HOBBY\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups/:groupId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upd groupby id Wrong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"        pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Пустое описание\", function () {\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.expect(data.message).to.include(\"Не указано описание группы\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"name\":\"HobbyWorld\",\r\n    \"description\":\"\",\r\n    \"category\":\"HOBBY\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/groups/:groupId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete 3 Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/contacts/:contactId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contacts",
						":contactId"
					],
					"variable": [
						{
							"key": "contactId",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/groups/:groupId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete group Wrong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"        pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Пустое описание\", function () {\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.expect(data.message).to.include(\"Группа с id1не найдена\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/groups/:groupId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"groups",
						":groupId"
					],
					"variable": [
						{
							"key": "groupId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}